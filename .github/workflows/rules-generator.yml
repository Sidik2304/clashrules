#=================================================
# Description: Generate Rule Provider for Clash
# HelmiWrt by helmiau.com
#=================================================

name: HelmiClash Rule Generator

on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 17 * * *
#  watch:
#    types: started

  push:
    tags:
      - "*"

jobs:
  release:
    name: Generate ${{ matrix.rule_name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - rule_name: Adobe
          - rule_name: YouTube
          - rule_name: Instagram
          - rule_name: Facebook
          - rule_name: TikTok

# curl -L https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash | grep "/blob/master/rule/Clash" | grep "youtube\|github\|neofetch\|sambaset\|svg\|zsh" | sed -e 's/\"//g' -e 's/ //g' -e 's/rel=.*//g' -e 's#<ahref=#http://github.com#g')
# https://github.com/blackmatrix7/ios_rule_script/blob/master/rule/Clash/Adobe/Adobe.yaml
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Adobe/Adobe.yaml
# https://github.com/blackmatrix7/ios_rule_script/blob/master/rule/Clash/Facebook/Facebook_Resolve.yaml

    env:
      RULE: ${{ matrix.rule_name }}
      BMSRC: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/${{ matrix.rule_name }}/${{ matrix.rule_name }}.yaml
      BMSRCRSVL: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/${{ matrix.rule_name }}/${{ matrix.rule_name }}_Resolve.yaml
 
    steps:
      - name: Set variables
        shell: bash
        run: |
          echo "RELEASE_NAME=HelmiClash $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=helmiclash-$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate ${{ matrix.rule_name }} file
        run: |
          mkdir -p gitrelease
          echo "Downloading ${{ matrix.rule_name }}.yaml"
          curl -L $BMSRC > ${{ matrix.rule_name }}.yaml
          if wget -S --spider $BMSRCRSVL 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            echo "Downloading ${{ matrix.rule_name }}_Resolve.yaml"
            curl -L $BMSRC > ${{ matrix.rule_name }}.yaml
          fi
          ls -R .?*

      - name: Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: "*.yaml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          